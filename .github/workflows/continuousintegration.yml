name: Continuous Integration

on:
  pull_request:
    branches: [ main ]

permissions: read-all

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Python Lint Code Scanning Action
        uses: advanced-security/python-lint-code-scanning-action@v1.1.2
        with:
          linter: pylint

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Assert Dockerfile & requirements
        run: |
          test -f Dockerfile && echo "Found Dockerfile" || (echo "No Dockerfile at root" && exit 1)
          test -f requirements.txt && echo "Found requirements.txt" || (echo "No requirements.txt at root" && exit 1)

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build (no push)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ github.actor }}/minhaatividade:pr-${{ github.event.pull_request.number }}

  discord:
    needs: [build, docker]
    runs-on: ubuntu-latest
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}   
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Run Discord Webhook

        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && env.DISCORD_WEBHOOK != '' }}
        uses: johnnyhuy/actions-discord-git-webhook@v1.2.0
        with:
          webhook_url: ${{ env.DISCORD_WEBHOOK }}
          template: "avatar-with-link"
          include-extras: true
